{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_extract_field_descriptor.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_get.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_set.js","node_modules/@swc/helpers/lib/_class_private_field_get.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","node_modules/@swc/helpers/lib/_class_private_field_set.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","node_modules/@swc/helpers/lib/_define_property.js","src/nodeFunctions.js","src/movingStructure.js","src/canvas.js","src/recSelection.js","src/textsDocument.js","src/formAddText.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classExtractFieldDescriptor;\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorGet;\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorSet;\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldGet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldSet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorSet = _interopRequireDefault(require(\"./_class_apply_descriptor_set\"));\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"set\");\n    (0, _classApplyDescriptorSet).default(receiver, descriptor, value);\n    return value;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export class NodeFunction {\n  constructor(classNameTextLine = 'text-line') {\n    this.classNameTextLine = classNameTextLine;\n  }\n\n  findLineElementUnderCoordinates(className, { x, y }) {\n    // const elementMouseIsOver = document.elementFromPoint(x, y);\n    const elements = document.elementsFromPoint(x, y);\n    const foundElement = elements.find(node => node.className === className);\n\n    return foundElement;\n  }\n\n  findElementWithLetter(point) {\n    const foundTextLineElement = this.findLineElementUnderCoordinates(\n      this.classNameTextLine,\n      point\n    );\n\n    return foundTextLineElement.nodeName === 'WORD'\n      ? foundTextLineElement\n      : null;\n  }\n\n  replaceSplitsCopyTextElement(textElement) {\n    if (!textElement) return false;\n\n    try {\n      const text_nodes = Array.from(textElement.childNodes).filter(node => {\n        return (\n          node.nodeType == Node.TEXT_NODE &&\n          node.nodeValue.match(/[a-zA-Z0-9]{2,}/)\n        );\n      });\n\n      if (text_nodes.length === 0) return false;\n\n      text_nodes.forEach(node => {\n        // const words = node.nodeValue.split(/(\\s+)/);\n        const letters = node.nodeValue.split('');\n\n        const fragment = document.createDocumentFragment();\n\n        letters.forEach((letter, index) => {\n          const letterElem = document.createElement('word');\n          letterElem.className = this.classNameTextLine;\n          letterElem.dataset.number = index;\n          letterElem.textContent = letter;\n          fragment.appendChild(letterElem);\n        });\n        this.replaceChild(fragment, node);\n      });\n    } catch {\n      return false;\n    }\n\n    return true;\n  }\n\n  replaceChild(newChild, oldChild) {\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n  }\n\n  getHitLetter(hit_elem, x, y) {\n    let hit_letter = '';\n\n    if (!hit_elem) return hit_letter;\n\n    //text contents of hit element\n    const text_nodes = Array.from(hit_elem.childNodes).filter(node => {\n      return (\n        node.nodeType == Node.TEXT_NODE && node.nodeValue.match(/[a-zA-Z]{2,}/)\n      );\n    });\n\n    //bunch of text under cursor? break it into words\n    if (text_nodes.length === 0) return hit_letter;\n\n    const original_content = hit_elem.cloneNode(true);\n\n    text_nodes.forEach(node => {\n      // const words = node.nodeValue.split(/(\\s+)/);\n      const letters = node.nodeValue.split('');\n\n      const fragment = document.createDocumentFragment();\n\n      letters.forEach((letter, index) => {\n        const letterElem = document.createElement('word');\n        letterElem.className = this.classNameTextLine;\n        letterElem.dataset.number = index;\n        letterElem.textContent = letter;\n        fragment.appendChild(letterElem);\n      });\n      // node.parentNode.replaceChild(fragment, node);\n      this.replaceChild(fragment, node);\n    });\n\n    //get the exact word under cursor\n    const foundTextLineElement = this.findLineElementUnderCoordinates(\n      this.classNameTextLine,\n      { x, y }\n    );\n\n    if (foundTextLineElement.nodeName === 'WORD') {\n      hit_letter = foundTextLineElement.textContent;\n    }\n\n    // hit_elem.parentNode.replaceChild(original_content, hit_elem);\n    this.replaceChild(original_content, hit_elem);\n\n    return hit_letter;\n  }\n}\n","export class MovingStructure {\n  constructor() {\n    this.clearStructure();\n  }\n\n  clearStructure() {\n    this.elementFrom = null;\n    this.originalElementFrom = null;\n\n    this.elementTo = null;\n    this.originalElementTo = null;\n\n    this.movingLetters = [];\n    this.elementToMove = null;\n  }\n\n  getTextMovingLetters() {\n    return this.movingLetters.reduce(\n      (result, element) => result + element.textContent,\n      ''\n    );\n  }\n\n  addElementToStructure(element) {\n    this.movingLetters.push(element);\n  }\n\n  deleteElementFromStructure(element) {\n    this.movingLetters = this.movingLetters.filter(\n      letterElement => letterElement !== element\n    );\n  }\n\n  clearMovingLetters() {\n    this.movingLetters = [];\n  }\n\n  addElementFrom(elementFrom) {\n    this.elementFrom = elementFrom;\n    this.originalElementFrom = elementFrom.cloneNode(true);\n  }\n\n  addElementTo(elementFrom) {\n    this.elementTo = elementFrom;\n    this.originalElementTo = elementFrom.cloneNode(true);\n  }\n\n  sortMovingLetters() {\n    this.movingLetters.sort(\n      (element1, element2) =>\n        Number(element1.dataset.number) - Number(element2.dataset.number)\n    );\n  }\n\n  countInMovingLetters() {\n    return this.movingLetters.length;\n  }\n  isElementInStructure(element) {\n    return this.movingLetters.find(letterElement => letterElement === element);\n  }\n\n  isExistOriginalFromDocument() {\n    return !!this.elementFrom && !!this.originalElementFrom;\n  }\n\n  isExistOriginalToDocument() {\n    return !!this.elementTo && !!this.originalElementTo;\n  }\n\n  isMovingLettersNotEmpty() {\n    return !!this.elementFrom && this.movingLetters.length > 0;\n  }\n\n  isSavedElementFromEqualElementFrom(element) {\n    return (\n      this.elementFrom === element || this.elementFrom === element.parentNode\n    );\n  }\n\n  isElementToEqualElementFrom(elementTo) {\n    return (\n      this.elementFrom === elementTo ||\n      this.elementFrom === elementTo.parentNode\n    );\n  }\n\n  isSavedElement(element) {\n    return !!this.elementFrom;\n  }\n\n  isEmptyMovingLetters() {\n    return this.movingLetters.length === 0;\n  }\n\n  toMoveLetters() {\n    if (!this.elementToMove) return;\n\n    if (this.isExistOriginalToDocument()) {\n      this.#movingChosenLetterToAnotherElement();\n    } else {\n      this.#movingChosenLetterToThisElement();\n    }\n  }\n\n  #movingChosenLetterToAnotherElement() {\n    //add\n    const originalTextContent = this.originalElementTo.textContent;\n    const numberInsertPosition = this.elementToMove.dataset.number;\n    const insertText = this.getTextMovingLetters();\n\n    this.originalElementTo.textContent =\n      originalTextContent.substring(0, numberInsertPosition) +\n      insertText +\n      originalTextContent.substring(numberInsertPosition);\n\n    const arrayIndexToDelete = this.#createArrayIndexToDelete();\n    // delete\n    const originalTextContentFrom = this.originalElementFrom.textContent;\n    this.originalElementFrom.textContent = this.#deleteMovingLetters(\n      originalTextContentFrom,\n      arrayIndexToDelete\n    );\n  }\n\n  #movingChosenLetterToThisElement() {\n    // TODO\n    //Треба паревірити чи не кидаємо на \"вибраний\" елемент\n    //add\n    const originalTextContent = this.originalElementFrom.textContent;\n    const numberInsertPosition = this.elementToMove.dataset.number;\n    const insertText = this.getTextMovingLetters();\n\n    const newTextContent =\n      originalTextContent.substring(0, numberInsertPosition) +\n      insertText +\n      originalTextContent.substring(numberInsertPosition);\n\n    const arrayIndexToDelete = this.#createArrayIndexToDelete(\n      Number(numberInsertPosition),\n      Number(insertText.length)\n    );\n\n    // delete\n    this.originalElementFrom.textContent = this.#deleteMovingLetters(\n      newTextContent,\n      arrayIndexToDelete\n    );\n  }\n\n  #createArrayIndexToDelete(numberInsertPosition = 0, countInsertLetter = 0) {\n    const isAddOptions = !this.isExistOriginalToDocument();\n\n    const indexesToRemove = this.movingLetters.map(element => {\n      let index = Number(element.dataset.number);\n      if (isAddOptions && index >= numberInsertPosition) {\n        index += countInsertLetter;\n      }\n\n      return index;\n    });\n\n    indexesToRemove.sort((a, b) => b - a);\n\n    return indexesToRemove;\n  }\n\n  #deleteMovingLetters(text, indexesToRemove) {\n    let chars = text.split('');\n    indexesToRemove.forEach(index => {\n      chars.splice(index, 1);\n    });\n\n    return chars.join('');\n  }\n}\n","export class Canvas {\n  constructor(\n    { classNameCanvas, elementOwner } = {\n      classNameCanvas: 'canvas-field',\n      elementOwner: null,\n    }\n  ) {\n    this.canvasRef = document.querySelector(\n      `.${classNameCanvas || 'canvas-field'}`\n    );\n    this.elementOwner = elementOwner;\n\n    this.#addListeners();\n    this.isAllowDrawing = false;\n  }\n\n  #addListeners() {\n    window.addEventListener('resize', this.resizeCanvas);\n    document.addEventListener('DOMContentLoaded', this.listenerCanvas);\n  }\n\n  resizeCanvas = () => {\n    if (this.elementOwner) {\n      const recElementOwner = this.elementOwner.getBoundingClientRect();\n\n      this.canvasRef.width = recElementOwner.width;\n      this.canvasRef.height = recElementOwner.height;\n    } else {\n      this.canvasRef.width = window.innerWidth;\n      this.canvasRef.height = window.innerHeight;\n    }\n  };\n\n  listenerCanvas = () => {\n    let isDrawing = false;\n    let startX, startY;\n\n    const canvas = this.canvasRef;\n    const ctx = canvas.getContext('2d');\n\n    const stopDrawing = () => {\n      isDrawing = false;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    canvas.addEventListener('mousemove', event => {\n      if (!isDrawing || !this.isAllowDrawing) return;\n\n      const x = event.clientX - canvas.getBoundingClientRect().left;\n      const y = event.clientY - canvas.getBoundingClientRect().top;\n\n      const width = x - startX;\n      const height = y - startY;\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.beginPath();\n      ctx.strokeStyle = 'gray';\n      ctx.rect(startX, startY, width, height);\n      ctx.stroke();\n    });\n\n    canvas.addEventListener('mousedown', event => {\n      isDrawing = true;\n      startX = event.clientX - canvas.getBoundingClientRect().left;\n      startY = event.clientY - canvas.getBoundingClientRect().top;\n    });\n\n    canvas.addEventListener('mouseup', stopDrawing);\n\n    canvas.addEventListener('mouseleave', stopDrawing);\n  };\n}\n","export class RecSelection {\n  constructor() {\n    this.clearRec();\n  }\n\n  setStartPoint({ x, y }) {\n    this.startPoint = { x, y };\n  }\n\n  setCurrentPoint({ x, y }) {\n    this.currentPoint = { x, y };\n  }\n\n  clearRec() {\n    this.startPoint = { x: 0, y: 0 };\n    this.currentPoint = { x: 0, y: 0 };\n  }\n\n  isElementInRecSelection(recElement) {\n    return (\n      this.isCoordinateYInRec(recElement.top) ||\n      this.isCoordinateYInRec(recElement.bottom) ||\n      this.isStartSelectInElementOnAxisY(recElement)\n    );\n  }\n\n  isElementUnderRecSelection(recElement) {\n    return (\n      recElement.top > this.currentPoint.y &&\n      recElement.bottom > this.currentPoint.y\n    );\n  }\n\n  isCoordinateYInRec(y) {\n    return (\n      (this.startPoint.y <= y && y <= this.currentPoint.y) ||\n      (this.currentPoint.y <= y && y <= this.startPoint.y)\n    );\n  }\n\n  isCoordinateXInRec(x) {\n    return (\n      (this.startPoint.x <= x && x <= this.currentPoint.x) ||\n      (this.currentPoint.x <= x && x <= this.startPoint.x)\n    );\n  }\n\n  isStartSelectInElementOnAxisY(recElement) {\n    return (\n      recElement.top <= this.startPoint.y &&\n      this.startPoint.y <= recElement.bottom\n    );\n  }\n\n  oppositeVerticalAngle() {\n    return {\n      x: this.startPoint.x,\n      y: this.currentPoint.y,\n    };\n  }\n\n  rightCoordinate() {\n    return Math.max(this.startPoint.x, this.currentPoint.x);\n  }\n\n  leftCoordinate() {\n    return Math.min(this.startPoint.x, this.currentPoint.x);\n  }\n\n  topCoordinate() {\n    return Math.min(this.startPoint.y, this.currentPoint.y);\n  }\n\n  bottomCoordinate() {\n    return Math.max(this.startPoint.y, this.currentPoint.y);\n  }\n\n  isElementInSelectedAxisX(recElement) {\n    return (\n      ((this.leftCoordinate() <= recElement.left &&\n        recElement.left <= this.rightCoordinate()) ||\n        (this.leftCoordinate() <= recElement.right &&\n          recElement.right <= this.rightCoordinate())) &&\n      ((this.topCoordinate() <= recElement.top &&\n        recElement.top <= this.bottomCoordinate()) ||\n        (this.topCoordinate() <= recElement.bottom &&\n          recElement.bottom <= this.bottomCoordinate()))\n    );\n  }\n\n  isElementInSelectedAxisY(recElement) {\n    return true;\n  }\n\n  isElementInAnotherLine(recElement, recTestElement) {\n    return (\n      recTestElement.bottom < recElement.top ||\n      recTestElement.top > recElement.bottom\n    );\n  }\n}\n","import { NodeFunction } from './nodeFunctions';\nimport { MovingStructure } from './movingStructure';\nimport { Canvas } from './canvas';\nimport { RecSelection } from './recSelection';\n\nexport class TextsDocument {\n  #statuses = {\n    ready: 'READY',\n    selected_rec: 'SELECTED_REC',\n    moving_letter: 'MOVING_LETTER',\n    selected_letter: 'SELECTED_LETTED',\n    wait_moving_rec: 'WAIT_MOVING_REC',\n  };\n\n  #currentStatusOperation = this.#statuses.ready;\n\n  #isControlDown = false;\n  #isMouseDown = false;\n  #isShowMovingText = false;\n\n  constructor(\n    classNameTextsDocument = 'texts-document',\n    classNameTextLine = 'text-line',\n    classNameMovingText = 'moving-test'\n  ) {\n    this.classNameTextLine = classNameTextLine;\n\n    this.textsDocumentRef = document.querySelector(\n      `.${classNameTextsDocument}`\n    );\n\n    this.movingTextsDocumentRef = document.querySelector(\n      `.${classNameMovingText}`\n    );\n\n    this.nodeFunction = new NodeFunction(classNameTextLine);\n    this.movingStructure = new MovingStructure();\n\n    this.recSelection = new RecSelection();\n\n    this.canvas = new Canvas({\n      elementOwner: this.textsDocumentRef,\n    });\n    this.canvas.resizeCanvas();\n\n    this.#addListeners();\n  }\n\n  addText = text => {\n    const htmlText = `<p class=\"${this.classNameTextLine}\" >${text}</p>`;\n    this.textsDocumentRef.insertAdjacentHTML('beforeend', htmlText);\n  };\n\n  #addListeners() {\n    document.addEventListener('mousedown', this.#handleMouseDown);\n    document.addEventListener('mouseup', this.#handleMouseUp);\n    document.addEventListener('keyup', this.#handleKeyUp);\n  }\n\n  #restoreOriginalElement() {\n    if (this.movingStructure.isExistOriginalFromDocument()) {\n      this.nodeFunction.replaceChild(\n        this.movingStructure.originalElementFrom,\n        this.movingStructure.elementFrom\n      );\n    }\n\n    if (this.movingStructure.isExistOriginalToDocument()) {\n      this.nodeFunction.replaceChild(\n        this.movingStructure.originalElementTo,\n        this.movingStructure.elementTo\n      );\n    }\n  }\n\n  #clearToMovingStructure() {\n    this.#restoreOriginalElement();\n\n    this.movingStructure.clearStructure();\n  }\n\n  #isUnderCursorSelectedTextElement(point) {\n    const foundElementTo = this.nodeFunction.findLineElementUnderCoordinates(\n      this.classNameTextLine,\n      point\n    );\n\n    if (!foundElementTo) return false;\n\n    return !!this.movingStructure.isElementInStructure(foundElementTo);\n  }\n\n  #addMovingLetterToMovingStructure(point) {\n    const foundElementTo = this.nodeFunction.findLineElementUnderCoordinates(\n      this.classNameTextLine,\n      point\n    );\n\n    if (!foundElementTo) return;\n\n    if (!this.movingStructure.isElementToEqualElementFrom(foundElementTo)) {\n      this.movingStructure.addElementTo(foundElementTo);\n\n      if (!this.nodeFunction.replaceSplitsCopyTextElement(foundElementTo)) {\n        this.#clearToMovingStructure();\n        return false;\n      }\n    }\n\n    const foundElementToMove = this.nodeFunction.findElementWithLetter(point);\n\n    if (!foundElementToMove || !foundElementToMove.textContent) return false;\n\n    this.movingStructure.elementToMove = foundElementToMove;\n  }\n\n  #addLetterToMovingStructure(point) {\n    const foundElementFrom = this.nodeFunction.findLineElementUnderCoordinates(\n      this.classNameTextLine,\n      point\n    );\n\n    // We don't found element or we have already added a letter from another block\n    if (\n      !foundElementFrom ||\n      (this.movingStructure.isMovingLettersNotEmpty() &&\n        !this.movingStructure.isSavedElementFromEqualElementFrom(\n          foundElementFrom\n        ))\n    )\n      return false;\n\n    // is item has already been added and transformed\n    if (\n      !this.movingStructure.isSavedElement() ||\n      !this.movingStructure.isSavedElementFromEqualElementFrom(foundElementFrom)\n    ) {\n      this.movingStructure.addElementFrom(foundElementFrom);\n\n      if (!this.nodeFunction.replaceSplitsCopyTextElement(foundElementFrom)) {\n        this.#clearToMovingStructure();\n        return false;\n      }\n    }\n\n    const foundElementWithLetter =\n      this.nodeFunction.findElementWithLetter(point);\n\n    if (!foundElementWithLetter || !foundElementWithLetter.textContent) {\n      this.#clearToMovingStructure();\n      return false;\n    }\n\n    if (this.movingStructure.isElementInStructure(foundElementWithLetter)) {\n      this.movingStructure.deleteElementFromStructure(foundElementWithLetter);\n      foundElementWithLetter.dataset.selection = false;\n    } else {\n      this.movingStructure.addElementToStructure(foundElementWithLetter);\n      foundElementWithLetter.dataset.selection = true;\n    }\n\n    return this.movingStructure.isMovingLettersNotEmpty();\n  }\n\n  #movingChosenLetter(point) {\n    this.#addMovingLetterToMovingStructure(point);\n    this.movingStructure.toMoveLetters();\n  }\n\n  // * Selected area\n  #mouseSelectionRec = e => {\n    // * 0. Set current position\n    this.recSelection.setCurrentPoint({\n      x: e.clientX,\n      y: e.clientY,\n    });\n\n    // * 1. lost a previously found string\n    const elementFrom = this.movingStructure.elementFrom;\n    if (\n      !!elementFrom &&\n      !this.recSelection.isElementInRecSelection(\n        elementFrom.getBoundingClientRect()\n      )\n    ) {\n      this.#clearToMovingStructure();\n      this.#clearUnnecessarySelectedElement();\n    }\n\n    // * 2. Search for a element with string\n    if (!this.movingStructure.isExistOriginalFromDocument())\n      this.#foundWorkElement();\n\n    // * 3. Haven't found yet\n    if (!this.movingStructure.isExistOriginalFromDocument()) return;\n\n    // * 4. Look for letters\n    this.#foundAndSelectLetterInRec();\n  };\n\n  #foundWorkElement() {\n    const textElements = this.textsDocumentRef.querySelectorAll(\n      `.${this.classNameTextLine}`\n    );\n\n    if (textElements.length === 0) return;\n\n    let foundElementFrom = null;\n\n    for (const element of textElements) {\n      const recElement = element.getBoundingClientRect();\n\n      if (\n        this.recSelection.isElementInRecSelection(recElement) &&\n        this.#isElementWithText(element)\n      ) {\n        foundElementFrom = element;\n        break;\n      }\n\n      if (this.recSelection.isElementUnderRecSelection(recElement)) break;\n    }\n\n    if (!foundElementFrom) return;\n\n    this.movingStructure.addElementFrom(foundElementFrom);\n  }\n\n  #isElementWithText(element) {\n    this.movingStructure.addElementFrom(element);\n\n    this.nodeFunction.replaceSplitsCopyTextElement(element);\n\n    const foundLetters = this.#foundLetterInRec(true);\n\n    if (foundLetters.length === 0) {\n      this.#clearToMovingStructure();\n      return false;\n    }\n    return true;\n  }\n\n  #foundLetterInRec(onlyFirst = false) {\n    const children = this.movingStructure.elementFrom.children;\n\n    const leftCoordinate = this.recSelection.leftCoordinate();\n    const rightCoordinate = this.recSelection.rightCoordinate();\n\n    const newMovingLetters = [];\n\n    for (const elementWithLetter of children) {\n      const rectElementWithLetter = elementWithLetter.getBoundingClientRect();\n\n      if (rectElementWithLetter.right < leftCoordinate) continue;\n      if (rectElementWithLetter.left > rightCoordinate) continue; //For multiline text there can't write break\n\n      if (\n        this.recSelection.isElementInSelectedAxisX(rectElementWithLetter) &&\n        this.recSelection.isElementInSelectedAxisY(rectElementWithLetter)\n      ) {\n        newMovingLetters.push(elementWithLetter);\n        if (onlyFirst) break;\n      }\n    }\n\n    return newMovingLetters;\n  }\n\n  #foundAndSelectLetterInRec() {\n    const newMovingLetters = this.#foundLetterInRec();\n\n    if (newMovingLetters.length === 0) {\n      this.movingStructure.clearMovingLetters();\n      this.#clearUnnecessarySelectedElement();\n      return;\n    }\n\n    this.#combineWithMovingLetters(newMovingLetters);\n    this.#clearUnnecessarySelectedElement();\n  }\n\n  #combineWithMovingLetters(newMovingLetters) {\n    const movingLetters = this.movingStructure.movingLetters;\n\n    for (let i = movingLetters.length - 1; i >= 0; i--) {\n      const indexElement = newMovingLetters.findIndex(\n        element => element === movingLetters[i]\n      );\n\n      if (indexElement === -1) {\n        // delete from movingLetters\n        movingLetters[i].dataset.selection = false;\n        movingLetters.splice(i, 1);\n      } else {\n        //delete from newMovingLetters\n        newMovingLetters.splice(indexElement, 1);\n      }\n    }\n\n    if (newMovingLetters.length > 0) {\n      const rectFirstLetter =\n        movingLetters.length > 0\n          ? movingLetters[0].getBoundingClientRect()\n          : newMovingLetters[0].getBoundingClientRect();\n\n      for (const elementWithLetter of newMovingLetters) {\n        if (\n          rectFirstLetter &&\n          this.recSelection.isElementInAnotherLine(\n            rectFirstLetter,\n            elementWithLetter.getBoundingClientRect()\n          )\n        )\n          continue;\n\n        this.movingStructure.addElementToStructure(elementWithLetter);\n        elementWithLetter.dataset.selection = true;\n      }\n    }\n\n    this.movingStructure.sortMovingLetters();\n  }\n\n  #clearUnnecessarySelectedElement() {\n    const selectedElements = this.textsDocumentRef.querySelectorAll(\n      `.${this.classNameTextLine}[data-selection = \"true\"]`\n    );\n    for (const element of selectedElements) {\n      if (this.movingStructure.isElementInStructure(element)) continue;\n      element.dataset.selection = false;\n    }\n  }\n\n  // * Moving text\n  #showMovingText = () => {\n    this.movingTextsDocumentRef.style.display = 'block';\n    this.movingTextsDocumentRef.textContent =\n      this.movingStructure.getTextMovingLetters();\n\n    this.#isShowMovingText = true;\n  };\n\n  #hideMovingText = () => {\n    this.movingTextsDocumentRef.style.display = 'none';\n    this.#isShowMovingText = false;\n  };\n\n  #moveMovingText = point => {\n    this.movingTextsDocumentRef.style.left = point.x + 'px';\n    this.movingTextsDocumentRef.style.top = point.y + 5 + 'px';\n  };\n\n  // * Status operation\n  #isStatusOperation(status) {\n    return this.#currentStatusOperation === status;\n  }\n\n  #toStatusSelectedRec(point) {\n    this.#currentStatusOperation = this.#statuses.selected_rec;\n    this.canvas.isAllowDrawing = true;\n    this.recSelection.setStartPoint(point);\n\n    document.addEventListener('mousemove', this.#handleMouseSelectionRec);\n    document.removeEventListener('mousemove', this.#handleMouseMoveLetter);\n  }\n\n  #toStatusSelectedLetter() {\n    this.#currentStatusOperation = this.#statuses.selected_letter;\n    document.addEventListener('mousemove', this.#handleMouseMoveLetter);\n  }\n\n  #toStatusMovingLetter() {\n    this.#currentStatusOperation = this.#statuses.moving_letter;\n  }\n\n  #toStatusReady() {\n    this.#currentStatusOperation = this.#statuses.ready;\n  }\n\n  #toStatusWaitMovingRec() {\n    this.#currentStatusOperation = this.#statuses.wait_moving_rec;\n  }\n\n  #hideMovingElements() {\n    this.#hideMovingText();\n    this.recSelection.clearRec();\n    this.canvas.isAllowDrawing = false;\n  }\n\n  // * Handles\n  #handleMouseDown = e => {\n    this.#isMouseDown = true;\n    this.#isControlDown = e.ctrlKey;\n\n    const currentPoint = {\n      x: e.clientX,\n      y: e.clientY,\n    };\n\n    if (this.#isStatusOperation(this.#statuses.wait_moving_rec)) {\n      if (this.#isUnderCursorSelectedTextElement(currentPoint)) {\n        this.#toStatusMovingLetter();\n        document.addEventListener('mousemove', this.#handleMouseMoveLetter);\n      } else {\n        this.#clearToMovingStructure();\n      }\n      return;\n    }\n\n    if (this.#addLetterToMovingStructure(currentPoint)) {\n      this.#toStatusSelectedLetter();\n    } else {\n      this.#toStatusSelectedRec(currentPoint);\n    }\n  };\n\n  #handleMouseUp = e => {\n    this.#isMouseDown = false;\n    this.#hideMovingElements();\n\n    const currentPoint = {\n      x: e.clientX,\n      y: e.clientY,\n    };\n\n    document.removeEventListener('mousemove', this.#handleMouseMoveLetter);\n    document.removeEventListener('mousemove', this.#handleMouseSelectionRec);\n\n    if (this.#isControlDown) return;\n\n    if (this.#isStatusOperation(this.#statuses.moving_letter)) {\n      this.#movingChosenLetter(currentPoint);\n    }\n\n    if (\n      this.#isStatusOperation(this.#statuses.selected_rec) &&\n      !this.movingStructure.isEmptyMovingLetters()\n    ) {\n      this.#toStatusWaitMovingRec();\n    } else {\n      this.#clearToMovingStructure();\n      this.#toStatusReady();\n    }\n  };\n\n  #handleMouseMoveLetter = e => {\n    if (\n      !this.#isStatusOperation(this.#statuses.selected_letter) &&\n      !this.#isStatusOperation(this.#statuses.moving_letter)\n    )\n      return;\n\n    this.#toStatusMovingLetter();\n\n    if (!this.#isShowMovingText) this.#showMovingText();\n\n    this.#moveMovingText({ x: e.clientX, y: e.clientY });\n  };\n\n  #handleMouseSelectionRec = _.throttle(this.#mouseSelectionRec, 100, {\n    trailing: true,\n  });\n\n  #handleKeyUp = e => {\n    if (e.key !== 'Control') return;\n\n    this.#isControlDown = false;\n\n    if (!this.#isMouseDown) this.#clearToMovingStructure();\n  };\n}\n","export class FormAddText {\n  constructor(addText, classNameForm = 'text-form') {\n    this.textForm = document.querySelector(`.${classNameForm}`);\n    this.addText = addText;\n    this.#addListener();\n  }\n\n  #addListener() {\n    this.textForm.addEventListener('submit', this.#handleSubmitForm.bind(this));\n  }\n\n  #handleSubmitForm(event) {\n    const form = event.target;\n    event.preventDefault();\n\n    this.addText(form.elements.text.value.trim());\n\n    form.reset();\n  }\n}\n","import './css/styles.css';\nimport { TextsDocument } from './textsDocument';\nimport { FormAddText } from './formAddText';\n\nconst textsDocument = new TextsDocument();\nnew FormAddText(textsDocument.addText);\n\naddTestText();\n// ---------------------\nfunction addTestText() {\n  textsDocument.addText(\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. '\n  );\n\n  textsDocument.addText(\n    'Integer euismod, sapien ac sodales consectetur, metus tellus consequat nisl, '\n  );\n  textsDocument.addText(\n    'nec dignissim enim odio vel metus. Sed sed tellus nec elit sagittis tempus. Mauris nec commodo ipsum.'\n  );\n\n  textsDocument.addText(\n    'Vivamus auctor fringilla sapien, eu tincidunt lacus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Ut dignissim, velit vel consequat fermentum, libero risus venenatis quam, eu fermentum velit nulla non magna.'\n  );\n  textsDocument.addText(\n    `Duis convallis pretium erat, sit amet luctus mauris mattis eu. Proin auctor orci quis felis pulvinar, ac eleifend sapien posuere. Integer at libero libero.`\n  );\n  textsDocument.addText(\n    'Sed nec dapibus leo. Nulla facilisi. Vestibulum et erat vel nisi maximus malesuada. Mauris vestibulum odio ac nunc volutpat, ac malesuada sapien vestibulum. Proin quis risus ut magna accumsan malesuada.'\n  );\n  textsDocument.addText(\n    'Cras ullamcorper nisi eu sem laoreet, vel suscipit est consequat. Sed nec luctus ipsum. Suspendisse sit amet libero vel arcu rutrum scelerisque. Vivamus convallis semper justo, id ultricies velit fringilla a.'\n  );\n  textsDocument.addText(\n    'Phasellus vel ultrices eros. In vitae justo quis felis consectetur convallis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.'\n  );\n}\n"],"names":["Object","defineProperty","module","exports","value","default","receiver","privateMap","action","has","TypeError","get","descriptor","call","obj","privateCollection","set","writable","$e13576b86460cc50$exports","$e13576b86460cc50$var$_classExtractFieldDescriptor","$e13576b86460cc50$var$_classApplyDescriptorGet","$e13576b86460cc50$var$_interopRequireDefault","parcelRequire","__esModule","$bb98491953509995$exports","$bb98491953509995$var$_checkPrivateRedeclaration","$c36c16f840444775$exports","$c36c16f840444775$var$_classExtractFieldDescriptor","$c36c16f840444775$var$_classApplyDescriptorSet","$c36c16f840444775$var$_interopRequireDefault","$c9f733bc98e3bbfd$exports","privateSet","fn","$60afe4cd2804d2bb$exports","$60afe4cd2804d2bb$var$_checkPrivateRedeclaration","add","$60afe4cd2804d2bb$var$_interopRequireDefault","$da4b248c00322402$exports","key","enumerable","configurable","$93ea54040c3ffef2$export$415e4fff089e0a0e","findLineElementUnderCoordinates","className","x","y","document","elementsFromPoint","find","node","findElementWithLetter","point","foundTextLineElement","this","classNameTextLine","nodeName","replaceSplitsCopyTextElement","textElement","text_nodes","Array","from","childNodes","filter","nodeType","Node","TEXT_NODE","nodeValue","match","length","forEach","letters","split","fragment","createDocumentFragment","letter","index","letterElem","createElement","dataset","number","textContent","appendChild","replaceChild","newChild","oldChild","parentNode","getHitLetter","hit_elem","hit_letter","original_content","cloneNode","constructor","$120abc878c6ca6f1$var$_movingChosenLetterToAnotherElement","WeakSet","$120abc878c6ca6f1$var$_movingChosenLetterToThisElement","$120abc878c6ca6f1$var$_createArrayIndexToDelete","$120abc878c6ca6f1$var$_deleteMovingLetters","$120abc878c6ca6f1$export$2994981a11cbc28b","clearStructure","elementFrom","originalElementFrom","elementTo","originalElementTo","movingLetters","elementToMove","getTextMovingLetters","reduce","result","element","addElementToStructure","push","deleteElementFromStructure","letterElement","clearMovingLetters","addElementFrom","addElementTo","sortMovingLetters","sort","element1","element2","Number","countInMovingLetters","isElementInStructure","isExistOriginalFromDocument","isExistOriginalToDocument","isMovingLettersNotEmpty","isSavedElementFromEqualElementFrom","isElementToEqualElementFrom","isSavedElement","isEmptyMovingLetters","toMoveLetters","$parcel$interopDefault","$120abc878c6ca6f1$var$movingChosenLetterToAnotherElement","$120abc878c6ca6f1$var$movingChosenLetterToThisElement","originalTextContent","numberInsertPosition","insertText","substring","arrayIndexToDelete","$120abc878c6ca6f1$var$createArrayIndexToDelete","originalTextContentFrom","$120abc878c6ca6f1$var$deleteMovingLetters","newTextContent","countInsertLetter","isAddOptions","indexesToRemove","map","a","b","text","chars","splice","join","$2e93b6a2718e4ece$var$_addListeners","$2e93b6a2718e4ece$export$8d01c972ee8b14a9","classNameCanvas","elementOwner","recElementOwner","getBoundingClientRect","canvasRef","width","height","window","innerWidth","innerHeight","startX","startY","isDrawing","canvas","ctx","getContext","stopDrawing","clearRect","addEventListener","event","isAllowDrawing","clientX","left","clientY","top","beginPath","strokeStyle","rect","stroke","querySelector","$2e93b6a2718e4ece$var$addListeners","resizeCanvas","listenerCanvas","$e3d28df9274500e5$export$ec9fb3e15c832b21","setStartPoint","startPoint","setCurrentPoint","currentPoint","clearRec","isElementInRecSelection","recElement","isCoordinateYInRec","bottom","isStartSelectInElementOnAxisY","isElementUnderRecSelection","isCoordinateXInRec","oppositeVerticalAngle","rightCoordinate","Math","max","leftCoordinate","min","topCoordinate","bottomCoordinate","isElementInSelectedAxisX","right","isElementInSelectedAxisY","isElementInAnotherLine","recTestElement","$c3caa00449edaf40$var$_statuses","WeakMap","$c3caa00449edaf40$var$_currentStatusOperation","$c3caa00449edaf40$var$_isControlDown","$c3caa00449edaf40$var$_isMouseDown","$c3caa00449edaf40$var$_isShowMovingText","$c3caa00449edaf40$var$_addListeners","$c3caa00449edaf40$var$_restoreOriginalElement","$c3caa00449edaf40$var$_clearToMovingStructure","$c3caa00449edaf40$var$_isUnderCursorSelectedTextElement","$c3caa00449edaf40$var$_addMovingLetterToMovingStructure","$c3caa00449edaf40$var$_addLetterToMovingStructure","$c3caa00449edaf40$var$_movingChosenLetter","$c3caa00449edaf40$var$_mouseSelectionRec","$c3caa00449edaf40$var$_foundWorkElement","$c3caa00449edaf40$var$_isElementWithText","$c3caa00449edaf40$var$_foundLetterInRec","$c3caa00449edaf40$var$_foundAndSelectLetterInRec","$c3caa00449edaf40$var$_combineWithMovingLetters","$c3caa00449edaf40$var$_clearUnnecessarySelectedElement","$c3caa00449edaf40$var$_showMovingText","$c3caa00449edaf40$var$_hideMovingText","$c3caa00449edaf40$var$_moveMovingText","$c3caa00449edaf40$var$_isStatusOperation","$c3caa00449edaf40$var$_toStatusSelectedRec","$c3caa00449edaf40$var$_toStatusSelectedLetter","$c3caa00449edaf40$var$_toStatusMovingLetter","$c3caa00449edaf40$var$_toStatusReady","$c3caa00449edaf40$var$_toStatusWaitMovingRec","$c3caa00449edaf40$var$_hideMovingElements","$c3caa00449edaf40$var$_handleMouseDown","$c3caa00449edaf40$var$_handleMouseUp","$c3caa00449edaf40$var$_handleMouseMoveLetter","$c3caa00449edaf40$var$_handleMouseSelectionRec","$c3caa00449edaf40$var$_handleKeyUp","$c3caa00449edaf40$var$addListeners","$c3caa00449edaf40$var$restoreOriginalElement","movingStructure","nodeFunction","$c3caa00449edaf40$var$clearToMovingStructure","$c3caa00449edaf40$var$isUnderCursorSelectedTextElement","foundElementTo","$c3caa00449edaf40$var$addMovingLetterToMovingStructure","foundElementToMove","$c3caa00449edaf40$var$addLetterToMovingStructure","foundElementFrom","foundElementWithLetter","selection","$c3caa00449edaf40$var$movingChosenLetter","$c3caa00449edaf40$var$foundWorkElement","textElements","textsDocumentRef","querySelectorAll","recSelection","$c3caa00449edaf40$var$isElementWithText","$c3caa00449edaf40$var$foundLetterInRec","onlyFirst","children","newMovingLetters","elementWithLetter","rectElementWithLetter","$c3caa00449edaf40$var$foundAndSelectLetterInRec","$c3caa00449edaf40$var$clearUnnecessarySelectedElement","$c3caa00449edaf40$var$combineWithMovingLetters","i","indexElement","findIndex","rectFirstLetter","selectedElements","$c3caa00449edaf40$var$isStatusOperation","status","$c3caa00449edaf40$var$toStatusSelectedRec","selected_rec","removeEventListener","$c3caa00449edaf40$var$toStatusSelectedLetter","selected_letter","$c3caa00449edaf40$var$toStatusMovingLetter","moving_letter","$c3caa00449edaf40$var$toStatusReady","ready","$c3caa00449edaf40$var$toStatusWaitMovingRec","wait_moving_rec","$c3caa00449edaf40$var$hideMovingElements","$d9ecd8d97105ec15$var$_addListener","$d9ecd8d97105ec15$var$_handleSubmitForm","$d9ecd8d97105ec15$var$addListener","textForm","$d9ecd8d97105ec15$var$handleSubmitForm","bind","form","target","preventDefault","addText","elements","trim","reset","$1f0dc3b9307be026$var$textsDocument","classNameTextsDocument","classNameMovingText","htmlText","insertAdjacentHTML","e","movingTextsDocumentRef","style","display","ctrlKey","_","throttle","trailing","classNameForm"],"version":3,"file":"index.3cfdeed9.js.map"}